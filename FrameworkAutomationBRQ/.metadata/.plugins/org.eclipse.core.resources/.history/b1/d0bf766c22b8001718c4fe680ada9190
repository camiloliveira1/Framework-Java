package TestBaseSelenium;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.reflect.Method;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.testng.ITestContext;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeSuite;


import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;
import com.aventstack.extentreports.reporter.configuration.ChartLocation;
import com.aventstack.extentreports.reporter.configuration.Theme;

import ActionsSelenium.ActionsWeb;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

public class TestBase {

	//Relatório de log
	public static ExtentHtmlReporter htmlReporter;
	public static ExtentReports extent;
	public static ExtentTest test;
	protected static ExtentTest parentTest;
	protected static ExtentTest childTest;

	//WebDriver
	public static WebDriver driver;
	public static WebElement element;

	//Variaveis globais
	protected static String data;
	protected static String teste;
	protected static String nomeSuiteTest;
	protected static String nomeTest;    
	protected static String getStepName;
	protected static String pathProject;

	@BeforeSuite
	public void beforeSuite(ITestContext ctx) {

		//Nome da Suite de execução dos testes (informação caprutada do XML)
		nomeSuiteTest = ctx.getSuite().getName();
		//nomeSuiteTest = "CasoTesteCEP";
		//nomeSuiteTest = Thread.currentThread().getStackTrace()[2].getMethodName();
		//Variavel de informação data e hora
		SimpleDateFormat dateFormat = new SimpleDateFormat("dd_MM_yyyy HH_mm_ss");
		data = dateFormat.format(new Date());

		//Cria o diretório de Logs para cada suite de teste
		//pathProject = "C:\\";
		pathProject = (System.getProperty("user.dir"));
		String pathReportHTML = (pathProject + "\\Relatorios");
		File file = new File(pathReportHTML);
		file.mkdir();

		pathReportHTML = (pathReportHTML + "\\Tests");
		file = new File(pathReportHTML);
		file.mkdir();

		pathReportHTML = (pathReportHTML + "\\" +nomeSuiteTest);
		file = new File(pathReportHTML);
		file.mkdir();

		//Cria o HTML Log para cada suite de teste
		//htmlReporter = new ExtentHtmlReporter("C:\\Selenium4\\HerancaExentReport\\Relatorios\\Testes\\"+ nomeSuiteTest +"\\" + nomeSuiteTest +" "+ data +".html");
		htmlReporter = new ExtentHtmlReporter(pathReportHTML +"\\" + nomeSuiteTest +" "+ data +".html");
		//htmlReporter.loadXMLConfig("./extent-config.xml");
		//Atribuições do relatório de Log HTML
		extent = new ExtentReports();
		htmlReporter.config().setChartVisibilityOnOpen(true);        
		htmlReporter.config().setDocumentTitle("AutomationTesting");
		htmlReporter.config().setReportName("Automation Prodesp");
		htmlReporter.config().setTestViewChartLocation(ChartLocation.TOP);
		htmlReporter.config().setTheme(Theme.DARK);

		extent.attachReporter(htmlReporter);         
		extent.setSystemInfo("Host Name", "PRODESP");
		extent.setSystemInfo("Environment", "Automation Testing");
		extent.setSystemInfo("User Name", "Camilo");		


	}

	@BeforeMethod
	public void beforeMethod (Method method){
		//Captura o nome do Test a ser executado.
		nomeTest = method.getName();
		//Cria o relatório do caso de teste dentro do html de log
		test = extent.createTest(nomeTest);

		//Atribuição ao servidor Chrome
		//System.setProperty("webdriver.chrome.driver", "C:\\SELENIUM-workspace\\Jars\\chromedriver\\chromedriver.exe");
		//driver = new ChromeDriver();  

	}

	@AfterMethod
	public void afterMethod()
	{	
		driver.close();
	}

	@AfterSuite
	public void afterSuite()
	{
		//Gera o relatório HTML log
		extent.flush();

	}
	
//	#################################### Data Driven (Pega os valores por linha; cada linha uma execução dos testes)	
	public String[][] getExcelData(String fileName, String sheetName) {
		String[][] arrayExcelData = null;
		try {
			FileInputStream fs = new FileInputStream(fileName);
			Workbook wb = Workbook.getWorkbook(fs);
			Sheet sh = wb.getSheet(sheetName);

			int totalNoOfCols = sh.getColumns();
			int totalNoOfRows = sh.getRows();
			
			arrayExcelData = new String[totalNoOfRows-1][totalNoOfCols];
			
			for (int i= 1 ; i < totalNoOfRows; i++) {

				for (int j=0; j < totalNoOfCols; j++) {
					arrayExcelData[i-1][j] = sh.getCell(j, i).getContents();
				}

			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
			e.printStackTrace();
		} catch (BiffException e) {
			e.printStackTrace();
		}
		return arrayExcelData;
	}
}

